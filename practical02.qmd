---
title: "Getting started with R"
author: Your name here
date: today
format: html
---

### Exercise 1 {#sec-1}

* Create a vector of the letters A, B and C.

```{r}
c("A","B","C")

```
> created an object with no assigned name



* Assign the vector to a variable `my_letters`
```{r}
my_letters <- c("A","B","C")
```


* Check the what happens when you run `letters` (just this) on the command line.
```{r}
letters

```

> The output shows the full alphabet



* What happens when you concatenate two vectors? Add `c(my_letters , my_letters)`
```{r}
c(my_letters , my_letters)

```

> It appends the two vectors to eachother: "A" "B" "C" "A" "B" "C"



* Add the number 1 to letters. What happens to the type of the vector?
```{r}
letters + 1
typeof(letters)
```

> It's not possible to possible to execute the operation, so the type doesn't change



### Exercise 2


1. Create a vector `my_vec` with the numbers from 1 through 8.
2. Apply the operation `+2` to the vector/
3. Add the vector containing 1, 2, 3, 4 to `my_vec`. What do you observe?

```{r}
my_vec <- 1:8
my_vec + 2
my_vec + c(1:4)


```

> After the initiation iof the vector, adding +2 increases each value in the vector by two. When adding the second vector to it (c(1:4)), the values are added together in the order of [1][1], [2][2], [3][3], [4][4], and then reused for [5][1], [6][2], [7][3], [8][4].


### Exercise 3

* Consider the R output of the matrix below:

```
 [,1] [,2]
 [1,]    4    1
 [2,]    9    5
 [3,]   10    7
```

1. What was one of the correct commands used to write this matrix?
2. Assign the matrix as `A`
3. Check the dimensions
4. Extract the element `5`
5. Add the vector `c(0,0,0)` as a new column and update `A`
6. Modify the element 4 to `0`
7. Compute the transpose of `A`

```{r}
A <- matrix(1:6, nrow = 3, ncol = 2) 
dim(A)
A[3,1] #the fifth element in the matrix
A[A = 5] #the element with value 5
cbind(A, c(0,0,0))
A[A = 4] <- 0 #modifying the element with value 4 
A[2,2] <- #modifying the fourth element 
t(A)

```


8. Are any values in `A` larger than 10? 
```{r}
A[A > 10] 
# i haven't reassigned A after any of the operations, so the original values 1:6 haven't changed
```

9. Are all values in `A` smaller than 10?
```{r}
# Your answer in code

```

### Exercise 4

1. Create a function that sums up two values even if provided as characters values

```{r}
# Your answer in code





```


### Exercise 5

1. Create a function that returns the mean, median and standard deviation.

```{r}
# Your answer in code



```


### Exercise 6
1. Create a pipe statement that counts the number of NAs in vector containing numbers, characters and missing values.
The output of `c('1' , "a", NA, "2", NA)` should be 2.

```{r}
# Your answer in code



```


